const ReportsList = require("../models/ReportsList"); exports.createReportsList = async (req, res) => { const page = req.query.page || 0;const limit = req.query.limit || 25; try { let newReportsList = new ReportsList({name: req.body.name,email: req.body.email, }); await newReportsList.save(); res.send(newReportsList); } catch (err) { console.log(err); } }; exports.readReportsList = async (req, res) => { try { ReportsList.find({}, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); }).sort().skip(page * limit).limit(limit); } catch (err) { console.log(err); } }; exports.readReportsListFromID = async (req, res) => { try { await ReportsList.findById({ _id: req.params.id }, {}, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); }); } catch (err) { console.log(err); } }; exports.updateReportsList = async (req, res) => { try { await ReportsList.findByIdAndUpdate( req.params.id, {name: req.body.name,email: req.body.email, }, (err, result) => { if (err) { res.json({ app: err }); } res.send(result); } ); } catch (err) { console.log(err); } }; exports.deleteReportsList = async (req, res) => { try { if ((await ReportsList.findById(req.params.id)) === null) { res.json({ app: "post not found" }); } else { await ReportsList.findByIdAndRemove(req.params.id).exec(); res.json({ app: "post deleted" }); } } catch (err) { console.log(err); res.send(err); } };